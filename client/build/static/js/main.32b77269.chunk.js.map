{"version":3,"sources":["store/UISlice.js","theme/styles/NavbarStyles.js","theme/styles/PostBoxStyles.js","theme/theme.js","store/index.js","components/VisualFeedback/LoadOverlay.js","pages/SuggestionsPage.js","App.js","index.js","routes.instance.js","utils/showToast.js","utils/setProcess.js","store/userSlice.js","store/authSlice.js","utils/handleTokens.js","store/feedSlice.js","store/user-actions.js","utils/checkSession.js","hooks/useSetSuggestedUsers.js","components/Feed/RightBar/SuggestedUser.js","components/Feed/RightBar/SuggestedUserList.js"],"names":["UISlice","createSlice","name","initialState","toastData","isActive","title","undefined","status","isPageLoading","isLogoutAlertVisible","modalProcess","active","result","msg","loading","isModalOpen","reducers","setToastData","state","action","payload","resetToastData","toggleModalVisibility","setProcess","resetProcess","setPageLoading","setLogoutAlertVisibility","UISliceActions","actions","NavbarStyles","baseStyle","borderBottom","pos","top","zIndex","backgroundColor","justifyContent","d","boxShadow","sizes","variants","defaultProps","PostBoxStyles","width","base","md","marginBottom","mx","pt","rounded","lg","border","borderColor","mt","theme","extendTheme","components","Nav","NavStyles","PostBox","fonts","heading","body","colors","heart","feedBackground","navBackground","navIconColor","store","configureStore","reducer","auth","authSliceReducer","user","userSliceReducer","uiSliceReducer","feed","feedSliceReducer","LoadOverlay","height","left","display","alignItems","SuggestionsPage","maxWidth","className","marginY","size","textAlign","SuggestedUserList","count","LoginPage","React","lazy","RegisterPage","ProfilePage","EditProfilePage","ProcessOverlay","LogoutAlert","NewPostCreator","NavWrapper","FeedPage","App","dispatch","useDispatch","toast","useToast","history","useHistory","useSelector","isLoggedIn","modalProcessResultStatus","useEffect","tokens","getTokens","accessToken","refreshToken","navigator","onLine","showTost","success","checkSession","then","data","authSliceActions","loginUser","catch","err","logoutUser","replace","toastPosition","window","innerWidth","position","isClosable","duration","containerStyle","fontSize","setTimeout","addEventListener","console","log","fallback","isOpen","onClose","path","exact","to","ReactDOM","render","document","getElementById","routeInstance","axios","create","baseURL","process","interceptors","request","use","localStorage","getItem","headers","error","Promise","reject","response","a","originalRequest","config","method","url","Cancel","resData","setItem","resultData","setLoadingProcess","loadingMsg","setResultProcess","resultMsg","userSlice","userId","userProfileImage","userName","userFullName","bio","setUserData","_id","profileImage","username","resetUserData","pageNo","morePosts","timelinePosts","setSuggestedUsers","suggestedUsers","resetSuggestedUsers","userSliceActions","authSlice","authBtnLoading","removeTokens","setAuthLoadingBtnState","setToken","removeItem","feedSlice","setTimelinePosts","setPage","incrementPage","setMorePostsBoolean","addNewPost","unshift","deletePost","requestedPostId","foundPostIndex","findIndex","post","splice","feedSliceActions","updateUser","profileSetupFormData","put","fetchProfileData","setFetchedData","deleteUserAccount","currentPassword","password","updateUserPassword","newPassword","_data","loadUserDataUsingToken","userData","loadSuggestedUsers","resolve","followUser","isFollowing","setFollowProcessLoading","setIsFollowing","Error","prevState","backendErrorData","useSetSuggestedUsers","useState","isLoading","setIsLoading","setError","anotherFunction","SuggestedUser","props","followProcessLoading","padding","minWidth","my","mr","src","marginLeft","color","_hover","onClick","suggestedUsersList","limitedUsers","_","first","map","suggestedUser","index","w","p"],"mappings":"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","file":"static/js/main.32b77269.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst UISlice = createSlice({\r\n  name: \"UISlice\",\r\n  initialState: {\r\n    toastData: {\r\n      isActive: false,\r\n      title: undefined,\r\n      status: undefined,\r\n    },\r\n    isPageLoading: false,\r\n    isLogoutAlertVisible: false,\r\n    modalProcess: {\r\n      active: false,\r\n      result: {\r\n        status: undefined,\r\n        msg: undefined,\r\n      },\r\n      loading: {\r\n        status: false,\r\n        msg: undefined,\r\n      },\r\n    },\r\n    isModalOpen: false,\r\n  },\r\n  reducers: {\r\n    setToastData(state, action) {\r\n      state.toastData.isActive = action.payload.isActive;\r\n      state.toastData.title = action.payload.title;\r\n      state.toastData.status = action.payload.status;\r\n    },\r\n    resetToastData(state) {\r\n      state.toastData.isActive = false;\r\n      state.toastData.title = undefined;\r\n      state.toastData.status = undefined;\r\n    },\r\n    toggleModalVisibility(state) {\r\n      state.isModalOpen = !state.isModalOpen;\r\n    },\r\n    setProcess(state, action) {\r\n      if (action.payload.active)\r\n        state.modalProcess.active = action.payload.active;\r\n      if (action.payload.loading) {\r\n        const { status, msg } = action.payload.loading;\r\n        state.modalProcess.loading.status = status;\r\n        state.modalProcess.loading.msg = msg;\r\n      }\r\n      if (action.payload.result) {\r\n        const { status, msg } = action.payload.result;\r\n        state.modalProcess.result.status = status;\r\n        state.modalProcess.result.msg = msg;\r\n      }\r\n    },\r\n    resetProcess(state) {\r\n      state.modalProcess.active = false;\r\n      state.modalProcess.loading.status = false;\r\n      state.modalProcess.loading.msg = undefined;\r\n      state.modalProcess.result.status = undefined;\r\n      state.modalProcess.result.msg = undefined;\r\n    },\r\n    setPageLoading(state, action) {\r\n      state.isPageLoading = action.payload.isPageLoading;\r\n    },\r\n    setLogoutAlertVisibility(state, action) {\r\n      state.isLogoutAlertVisible = action.payload.isLogoutAlertVisible;\r\n    },\r\n  },\r\n});\r\n\r\nexport const UISliceActions = UISlice.actions;\r\n\r\nexport default UISlice.reducer;\r\n","const NavbarStyles = {\r\n  // Styles for the base style\r\n  baseStyle: {\r\n    borderBottom: \"1px solid pink\",\r\n    pos: \"sticky\",\r\n    top: \"0\",\r\n    zIndex: \"1\",\r\n    backgroundColor: \"#E6F4F1\",\r\n    justifyContent: \"center\",\r\n    d: \"flex\",\r\n    boxShadow:\r\n      \"rgba(67, 71, 85, 0.27) 0px 0px 0.25em, rgba(90, 125, 188, 0.05) 0px 0.25em 1em\",\r\n  },\r\n  // Styles for the size variations\r\n  sizes: {},\r\n  // Styles for the visual style variations\r\n  variants: {},\r\n  // The default `size` or `variant` values\r\n  defaultProps: {},\r\n};\r\n\r\nexport default NavbarStyles;\r\n","const PostBoxStyles = {\r\n  // Styles for the base style\r\n  baseStyle: {\r\n    backgroundColor: \"white\",\r\n    width: { base: \"100%\", md: \"600px\" },\r\n    marginBottom: \"40px\",\r\n    mx: \"auto\",\r\n    pt: \"14px\",\r\n    boxShadow:\r\n      \"rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px\",\r\n    rounded: { base: \"lg\", lg: \"lg\" },\r\n    border: { base: \"1px solid\", lg: \"1px solid #ccc\" },\r\n    borderColor: { base: \"#EEEEEE\" },\r\n    mt: \"10px\",\r\n  },\r\n  // Styles for the size variations\r\n  sizes: {},\r\n  // Styles for the visual style variations\r\n  variants: {},\r\n  // The default `size` or `variant` values\r\n  defaultProps: {},\r\n};\r\n\r\nexport default PostBoxStyles;\r\n","import { extendTheme, theme as base } from \"@chakra-ui/react\";\r\nimport NavStyles from \"./styles/NavbarStyles\";\r\nimport PostBoxStyles from \"./styles/PostBoxStyles\";\r\nimport HeadingStyles from \"./styles/HeadingStyles\";\r\n\r\nconst theme = extendTheme({\r\n  components: {\r\n    Nav: NavStyles,\r\n    PostBox: PostBoxStyles,\r\n    // Heading: HeadingStyles,\r\n  },\r\n  fonts: {\r\n    heading: \"Inter, sans-serif\",\r\n    body: \"Inconsolata, sans-serif\",\r\n  },\r\n  colors: {\r\n    heart: {\r\n      200: \"#ED4956\",\r\n    },\r\n    feedBackground: {\r\n      200: \"#fdf9f5\",\r\n    },\r\n    navBackground: {\r\n      300: \"#DDF2FF\",\r\n    },\r\n    navIconColor: {\r\n      500: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport authSliceReducer from \"./authSlice\";\r\nimport uiSliceReducer from \"./UISlice\";\r\nimport feedSliceReducer from \"./feedSlice\";\r\nimport userSliceReducer from \"./userSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: authSliceReducer,\r\n    user: userSliceReducer,\r\n    UISlice: uiSliceReducer,\r\n    feed: feedSliceReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import { Box, Spinner } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nfunction LoadOverlay() {\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100vh\"\r\n      pos=\"absolute\"\r\n      top=\"0\"\r\n      left=\"0\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      backgroundColor=\"white\"\r\n      zIndex=\"22\"\r\n    >\r\n      <Spinner />\r\n    </Box>\r\n  );\r\n}\r\nexport default LoadOverlay;\r\n","import { Box, Container, Heading } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport SuggestedUserList from \"../components/Feed/RightBar/SuggestedUserList\";\r\n\r\nimport \"./SuggestionsPage.css\";\r\n\r\nconst SuggestionsPage = () => {\r\n  return (\r\n    <Container maxWidth=\"lg\" className=\"suggestionsPage\">\r\n      <Box\r\n        marginY={{\r\n          base: \"2.4rem\",\r\n          lg: \"3rem\",\r\n        }}\r\n      >\r\n        <Heading size=\"xl\" textAlign=\"center\">\r\n          People you may know\r\n        </Heading>\r\n        <Box\r\n          marginY={{\r\n            base: \"3rem\",\r\n            md: \"3.2rem\",\r\n            lg: \"4.4rem\",\r\n          }}\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <SuggestedUserList count={10} />\r\n          </Container>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SuggestionsPage;\r\n","import { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport React, { Suspense, useEffect } from \"react\";\r\nimport { Spinner, useToast } from \"@chakra-ui/react\";\r\n\r\nimport checkSession from \"./utils/checkSession\";\r\nimport { getTokens } from \"./utils/handleTokens\";\r\nimport showTost from \"./utils/showToast\";\r\n\r\nimport \"./App.css\";\r\nimport { UISliceActions } from \"./store/UISlice\";\r\nimport { authSliceActions } from \"./store/authSlice\";\r\n\r\nimport LoadOverlay from \"./components/VisualFeedback/LoadOverlay\";\r\nimport SuggestionsPage from \"./pages/SuggestionsPage\";\r\nconst LoginPage = React.lazy(() => import(\"./pages/LoginPage\"));\r\nconst RegisterPage = React.lazy(() => import(\"./pages/RegisterPage\"));\r\n\r\nconst ProfilePage = React.lazy(() => import(\"./pages/ProfilePage\"));\r\n\r\nconst EditProfilePage = React.lazy(() => import(\"./pages/EditProfilePage\"));\r\n\r\nconst ProcessOverlay = React.lazy(() =>\r\n  import(\"./components/VisualFeedback/ProcessOverlay\")\r\n);\r\nconst LogoutAlert = React.lazy(() =>\r\n  import(\"./components/VisualFeedback/LogoutAlert\")\r\n);\r\n\r\nconst NewPostCreator = React.lazy(() =>\r\n  import(\"./components/VisualFeedback/NewPostCreator\")\r\n);\r\nconst NavWrapper = React.lazy(() => import(\"./components/Appbar/NavWrapper\"));\r\n\r\nconst FeedPage = React.lazy(() => import(\"./pages/FeedPage\"));\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const { isPageLoading, toastData } = useSelector((state) => state.UISlice);\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n  const modalProcess = useSelector((state) => state.UISlice.modalProcess);\r\n  const modalProcessResultStatus = modalProcess.result.status;\r\n  const isLogoutAlertVisible = useSelector(\r\n    (state) => state.UISlice.isLogoutAlertVisible\r\n  );\r\n  const { isActive } = toastData;\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      const tokens = getTokens();\r\n      const accessToken = tokens.accessToken;\r\n      const refreshToken = tokens.refreshToken;\r\n      if (!navigator.onLine) {\r\n        showTost(dispatch, { success: false, msg: \"No internet\" });\r\n        return;\r\n      }\r\n      if (accessToken && refreshToken) {\r\n        dispatch(UISliceActions.setPageLoading({ isPageLoading: true }));\r\n\r\n        checkSession(dispatch)\r\n          .then((data) => {\r\n            dispatch(authSliceActions.loginUser());\r\n            dispatch(UISliceActions.setPageLoading({ isPageLoading: false }));\r\n          })\r\n          .catch((err) => {\r\n            showTost(dispatch, { success: false, msg: \"Server Error\" });\r\n            dispatch(authSliceActions.logoutUser());\r\n            dispatch(UISliceActions.setPageLoading({ isPageLoading: false }));\r\n            history.replace(\"/login\");\r\n          });\r\n      }\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      let toastPosition = \"top-right\";\r\n      if (window.innerWidth < 700) {\r\n        toastPosition = \"bottom\";\r\n      }\r\n\r\n      toast({\r\n        title: toastData.title,\r\n        status: toastData.status,\r\n        position: toastPosition,\r\n        isClosable: true,\r\n        duration: 2000,\r\n        containerStyle: {\r\n          fontSize: toastPosition === \"bottom\" ? \"12px\" : \"14px\",\r\n        },\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      dispatch(UISliceActions.resetToastData());\r\n    };\r\n  }, [isActive]);\r\n\r\n  useEffect(() => {\r\n    if (modalProcessResultStatus !== undefined) {\r\n      setTimeout(() => {\r\n        dispatch(UISliceActions.resetProcess());\r\n      }, 2000);\r\n    }\r\n  }, [modalProcessResultStatus, dispatch]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"offline\", () => {\r\n      showTost(dispatch, { success: false, msg: \"Connection Lost\" });\r\n    });\r\n    window.addEventListener(\"online\", () => {\r\n      showTost(dispatch, { success: true, msg: \"Connected to server\" });\r\n    });\r\n  }, []);\r\n\r\n  console.log(\"App.js\");\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Suspense fallback={<LoadOverlay />}>\r\n        {isLoggedIn && <ProcessOverlay data={modalProcess} />}\r\n        {isLoggedIn && (\r\n          <LogoutAlert\r\n            isOpen={isLogoutAlertVisible}\r\n            onClose={() =>\r\n              dispatch(\r\n                UISliceActions.setLogoutAlertVisibility({\r\n                  isLogoutAlertVisible: false,\r\n                })\r\n              )\r\n            }\r\n          />\r\n        )}\r\n        {isPageLoading && <LoadOverlay />}\r\n        {isLoggedIn && <NewPostCreator />}\r\n\r\n        <Switch>\r\n          <Route path=\"/login\" exact>\r\n            {isLoggedIn ? <Redirect to=\"/\" /> : <LoginPage />}\r\n          </Route>\r\n          <Route path=\"/register\" exact>\r\n            {isLoggedIn ? <Redirect to=\"/\" /> : <RegisterPage />}\r\n          </Route>\r\n          <Route path=\"/profile/:username\">\r\n            {isLoggedIn ? (\r\n              <NavWrapper>\r\n                <ProfilePage />\r\n              </NavWrapper>\r\n            ) : (\r\n              <RegisterPage />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/update\" exact>\r\n            {isLoggedIn ? (\r\n              <NavWrapper>\r\n                <SuggestionsPage />\r\n              </NavWrapper>\r\n            ) : (\r\n              <RegisterPage />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/edit-profile\" exact>\r\n            {isLoggedIn ? (\r\n              <NavWrapper>\r\n                <EditProfilePage />\r\n              </NavWrapper>\r\n            ) : (\r\n              <RegisterPage />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/\">\r\n            {isLoggedIn ? (\r\n              <NavWrapper>\r\n                <FeedPage />\r\n              </NavWrapper>\r\n            ) : (\r\n              <LoginPage />\r\n            )}\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport theme from \"./theme/theme\";\r\n\r\nimport store from \"./store/index\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <ChakraProvider theme={theme}>\r\n        <App />\r\n      </ChakraProvider>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import axios from \"axios\";\r\n\r\nconst routeInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nrouteInstance.interceptors.request.use(\r\n  (request) => {\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n    if (accessToken) {\r\n      request.headers[\"authorization\"] = \"Bearer \" + accessToken;\r\n    }\r\n    return request;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\nrouteInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    const refreshToken = localStorage.getItem(\"refreshToken\");\r\n\r\n    if (\r\n      error.response &&\r\n      error.response.status === 401 &&\r\n      error.config &&\r\n      refreshToken\r\n    ) {\r\n      const response = await routeInstance({\r\n        method: \"POST\",\r\n        url: \"/api/auth/refresh-token\",\r\n        data: { refreshToken },\r\n      });\r\n      if (!response) {\r\n        throw new axios.Cancel();\r\n      }\r\n      const resData = await response.data;\r\n      console.log(\"originalRequest\", originalRequest);\r\n      localStorage.setItem(\"accessToken\", resData.data.accessToken);\r\n      localStorage.setItem(\"refreshToken\", resData.data.refreshToken);\r\n      originalRequest.headers[\"authorization\"] =\r\n        \"Bearer \" + resData.data.accessToken;\r\n\r\n      // const { method, url } = error.config;\r\n\r\n      // let requestObject = {};\r\n      // if (method === \"GET\") {\r\n      //   requestObject = {\r\n      //     method,\r\n      //     url,\r\n      //   };\r\n      // } else {\r\n      //   const requestData = error.config.data;\r\n      //   console.log(\"dataa\", requestData);\r\n      //   requestObject = {\r\n      //     method,\r\n      //     url,\r\n      //     data: requestData,\r\n      //   };\r\n      // }\r\n      return routeInstance(originalRequest);\r\n    }\r\n  }\r\n);\r\n\r\nexport default routeInstance;\r\n","import { UISliceActions } from \"../store/UISlice\";\r\n\r\nconst setToastData = (dispatch, resultData) => {\r\n  dispatch(\r\n    UISliceActions.setToastData({\r\n      isActive: true,\r\n      title: resultData ? resultData.msg : \"Something went wrong\",\r\n      status: resultData\r\n        ? resultData.success === true\r\n          ? \"success\"\r\n          : \"warning\"\r\n        : \"error\",\r\n    })\r\n  );\r\n};\r\n\r\nexport default setToastData;\r\n","import { UISliceActions } from \"../store/UISlice\";\r\n\r\nconst setLoadingProcess = (dispatch, loadingMsg) => {\r\n  dispatch(\r\n    UISliceActions.setProcess({\r\n      active: true,\r\n      loading: {\r\n        status: true,\r\n        msg: loadingMsg,\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nconst setResultProcess = (dispatch, status, resultMsg) => {\r\n  dispatch(\r\n    UISliceActions.setProcess({\r\n      active: true,\r\n      loading: {\r\n        status: false,\r\n        msg: undefined,\r\n      },\r\n      result: {\r\n        status: status,\r\n        msg: resultMsg,\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nconst setProcess = { setLoadingProcess, setResultProcess };\r\n\r\nexport default setProcess;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"User Slice\",\r\n  initialState: {\r\n    userId: null,\r\n    userProfileImage: null,\r\n    userName: null,\r\n    userFullName: null,\r\n    bio: undefined,\r\n  },\r\n\r\n  reducers: {\r\n    setUserData(state, action) {\r\n      const { _id, profileImage, name, bio, username } = action.payload;\r\n\r\n      state.userId = _id;\r\n      state.userFullName = name;\r\n      state.userProfileImage = profileImage;\r\n      state.userName = username;\r\n      state.bio = bio;\r\n    },\r\n    resetUserData(state) {\r\n      state.userId = null;\r\n      state.userProfileImage = null;\r\n      state.userName = null;\r\n      state.pageNo = 1;\r\n      state.morePosts = true;\r\n      state.timelinePosts = [];\r\n    },\r\n    setSuggestedUsers(state, action) {\r\n      state.suggestedUsers = action.payload;\r\n    },\r\n    resetSuggestedUsers(state) {\r\n      state.suggestedUsers = undefined;\r\n    },\r\n  },\r\n});\r\n\r\nexport const userSliceActions = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { removeTokens } from \"../utils/handleTokens\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n  name: \"authSlice\",\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    authBtnLoading: false,\r\n  },\r\n\r\n  reducers: {\r\n    loginUser(state) {\r\n      state.isLoggedIn = true;\r\n    },\r\n    logoutUser(state) {\r\n      state.isLoggedIn = false;\r\n      removeTokens();\r\n    },\r\n    setAuthLoadingBtnState(state, action) {\r\n      state.authBtnLoading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const authSliceActions = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","const getTokens = () => {\r\n  return {\r\n    accessToken: localStorage.getItem(\"accessToken\"),\r\n    refreshToken: localStorage.getItem(\"refreshToken\"),\r\n  };\r\n};\r\n\r\nconst setToken = (\r\n  accessToken = getTokens().accessToken,\r\n  refreshToken = getTokens().refreshToken\r\n) => {\r\n  localStorage.setItem(\"accessToken\", accessToken);\r\n  localStorage.setItem(\"refreshToken\", refreshToken);\r\n};\r\n\r\nconst removeTokens = () => {\r\n  localStorage.removeItem(\"accessToken\");\r\n  localStorage.removeItem(\"refreshToken\");\r\n};\r\n\r\nexport { setToken, getTokens, removeTokens };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst feedSlice = createSlice({\r\n  name: \"Feed Slice\",\r\n  initialState: {\r\n    pageNo: 1,\r\n    morePosts: true,\r\n    timelinePosts: [],\r\n  },\r\n\r\n  reducers: {\r\n    setTimelinePosts(state, action) {\r\n      state.timelinePosts = [...state.timelinePosts, ...action.payload];\r\n    },\r\n    setPage(state, action) {\r\n      state.pageNo = action.payload.pageNo;\r\n    },\r\n    incrementPage(state) {\r\n      state.pageNo += 1;\r\n    },\r\n    setMorePostsBoolean(state, action) {\r\n      state.morePosts = action.payload;\r\n    },\r\n    addNewPost(state, action) {\r\n      state.timelinePosts.unshift(action.payload);\r\n    },\r\n    deletePost(state, action) {\r\n      const requestedPostId = action.payload;\r\n\r\n      const posts = state.timelinePosts;\r\n      const foundPostIndex = posts.findIndex(\r\n        (post) => post._id === requestedPostId\r\n      );\r\n      if (foundPostIndex === -1) {\r\n        console.log(\"Invalid Operation\");\r\n      } else {\r\n        state.timelinePosts.splice(foundPostIndex, 1);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const feedSliceActions = feedSlice.actions;\r\n\r\nexport default feedSlice.reducer;\r\n","import routeInstance from \"../routes.instance\";\r\nimport setProcess from \"../utils/setProcess\";\r\nimport setToastData from \"../utils/showToast\";\r\nimport { authSliceActions } from \"./authSlice\";\r\nimport { feedSliceActions } from \"./feedSlice\";\r\nimport { UISliceActions } from \"./UISlice\";\r\nimport { userSliceActions } from \"./userSlice\";\r\n\r\nexport const updateUser = (profileSetupFormData) => async (dispatch) => {\r\n  try {\r\n    setProcess.setLoadingProcess(dispatch, \"Updating your details\");\r\n\r\n    const response = await routeInstance.put(\r\n      \"/api/users/update\",\r\n      profileSetupFormData\r\n    );\r\n\r\n    const resData = await response.data;\r\n\r\n    dispatch(userSliceActions.setUserData({ ...resData.data }));\r\n    dispatch(feedSliceActions.setMorePostsBoolean(true));\r\n    setProcess.setResultProcess(dispatch, true, \"Details Updated\");\r\n  } catch (error) {\r\n    console.log(error);\r\n    setProcess.setResultProcess(dispatch, false, \"Operation failed\");\r\n    // setToastData(dispatch);\r\n  }\r\n};\r\n\r\nexport const fetchProfileData = (setFetchedData, username) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await routeInstance({\r\n        method: \"get\",\r\n        url: `/api/posts/allposts/${username}`,\r\n      });\r\n      const resData = await response.data;\r\n      // dispatch(userSliceActions.setUserData({ ...resData.data }));\r\n      setFetchedData(resData.data);\r\n      dispatch(UISliceActions.setPageLoading({ isPageLoading: false }));\r\n    } catch (err) {\r\n      setToastData(dispatch);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteUserAccount = (currentPassword, userId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      setProcess.setLoadingProcess(dispatch, \"Deleting your account\");\r\n\r\n      const response = await routeInstance({\r\n        method: \"DELETE\",\r\n        url: \"/api/users/\" + userId,\r\n        data: {\r\n          password: currentPassword,\r\n        },\r\n      });\r\n\r\n      console.log(response.data);\r\n\r\n      const _data = response.data;\r\n      if (_data.success === true) {\r\n        setProcess.setResultProcess(dispatch, true, \"Account deleted\");\r\n        dispatch(authSliceActions.logoutUser());\r\n      }\r\n    } catch (err) {\r\n      setProcess.setResultProcess(dispatch, false, \"Invalid credentials\");\r\n      // setToastData(dispatch);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateUserPassword = (currentPassword, newPassword, userId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      setProcess.setLoadingProcess(dispatch, \"Updating your account\");\r\n\r\n      const response = await routeInstance({\r\n        method: \"PUT\",\r\n        url: \"/api/users/\" + userId + \"/update-password\",\r\n        data: {\r\n          currentPassword,\r\n          newPassword,\r\n        },\r\n      });\r\n\r\n      const _data = response.data;\r\n      console.log(_data);\r\n      if (_data.success === true) {\r\n        setProcess.setResultProcess(dispatch, true, _data.msg);\r\n      }\r\n    } catch (err) {\r\n      setProcess.setResultProcess(dispatch, false, \"Invalid credentials\");\r\n      // setToastData(dispatch);\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadUserDataUsingToken = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await routeInstance({\r\n        method: \"GET\",\r\n        url: \"/api/auth/user\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const resData = await response.data;\r\n      const userData = resData.data;\r\n\r\n      dispatch(userSliceActions.setUserData({ ...userData }));\r\n    } catch (error) {\r\n      setToastData(dispatch, error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadSuggestedUsers = () => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const response = await routeInstance({\r\n        url: \"/api/users/suggested-users\",\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const resData = await response.data;\r\n      resolve(resData);\r\n    } catch (err) {\r\n      console.log(err);\r\n      reject({\r\n        success: false,\r\n        msg: err,\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const followUser =\r\n  (userId, isFollowing, setFollowProcessLoading, setIsFollowing) =>\r\n  async (dispatch) => {\r\n    try {\r\n      setFollowProcessLoading(true);\r\n      const response = await routeInstance({\r\n        url: `/api/users/${userId}/${isFollowing ? \"un\" : \"\"}follow`,\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(response.error);\r\n      }\r\n\r\n      const resData = await response.data;\r\n\r\n      setToastData(dispatch, resData);\r\n      setIsFollowing((prevState) => !prevState);\r\n      setFollowProcessLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      const backendErrorData = err.response.data;\r\n      setToastData(dispatch, { ...backendErrorData });\r\n      setFollowProcessLoading(false);\r\n    }\r\n  };\r\n","import routeInstance from \"../routes.instance\";\r\n\r\nimport { userSliceActions } from \"../store/userSlice\";\r\n\r\nconst checkSession = (dispatch) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const response = await routeInstance({\r\n        method: \"get\",\r\n        url: \"/api/auth/user\",\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log(response);\r\n        const resData = await response.data;\r\n        dispatch(userSliceActions.setUserData({ ...resData.data }));\r\n        resolve(resData);\r\n      }\r\n    } catch (error) {\r\n      reject();\r\n    }\r\n  });\r\n};\r\n\r\nexport default checkSession;\r\n","import { useState, useEffect } from \"react\";\r\nimport { loadSuggestedUsers } from \"../store/user-actions\";\r\n\r\nconst useSetSuggestedUsers = () => {\r\n  const [suggestedUsers, setSuggestedUsers] = useState(undefined);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function anotherFunction() {\r\n      const resData = await loadSuggestedUsers();\r\n      if (resData.success === true) {\r\n        setSuggestedUsers(resData.data);\r\n        setIsLoading(false);\r\n      } else {\r\n        setError(resData.msg);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    anotherFunction();\r\n  }, []);\r\n\r\n  return {\r\n    suggestedUsers,\r\n    isLoading,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useSetSuggestedUsers;\r\n","import { useState } from \"react\";\r\n\r\nimport { Box, Button } from \"@chakra-ui/react\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { followUser } from \"../../../store/user-actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SuggestedUser = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [followProcessLoading, setFollowProcessLoading] = useState(false);\r\n  const [isFollowing, setIsFollowing] = useState(false);\r\n  const { username } = props;\r\n  const followHandler = () => {\r\n    dispatch(\r\n      followUser(\r\n        props.userId,\r\n        isFollowing,\r\n        setFollowProcessLoading,\r\n        setIsFollowing\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      border=\"1px solid maroon\"\r\n      padding=\"8px\"\r\n      rounded=\"md\"\r\n      minWidth={props.minWidth}\r\n      pos=\"relative\"\r\n      my=\"10px\"\r\n      maxWidth=\"400px\"\r\n      boxShadow=\"rgba(0, 0, 0, 0.15) 0px 2px 8px\"\r\n    >\r\n      <Box mr=\"3\">\r\n        <Link to={`/profile/${username}`}>\r\n          <Avatar size=\"sm\" src={props.src} className=\"action-icon\" />\r\n        </Link>\r\n      </Box>\r\n      <Link to={`/profile/${username}`}>\r\n        <Box className=\"action-icon\">{props.username}</Box>\r\n      </Link>\r\n      <Box marginLeft=\"auto\">\r\n        <Button\r\n          size=\"xs\"\r\n          backgroundColor=\"blue.500\"\r\n          color=\"white\"\r\n          _hover={{ color: \"black\" }}\r\n          onClick={followHandler}\r\n          isLoading={followProcessLoading}\r\n        >\r\n          {isFollowing ? \"Unfollow\" : \"Follow\"}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SuggestedUser;\r\n","import { Box } from \"@chakra-ui/react\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport useSetSuggestedUsers from \"../../../hooks/useSetSuggestedUsers\";\r\nimport SuggestedUser from \"./SuggestedUser\";\r\nimport _ from \"underscore\";\r\n\r\nfunction SuggestedUserList(props) {\r\n  // Using a custom hook\r\n  const { suggestedUsers, isLoading, error } = useSetSuggestedUsers();\r\n\r\n  let suggestedUsersList = undefined;\r\n  let limitedUsers = undefined;\r\n  if (suggestedUsers) {\r\n    suggestedUsersList = _.first(suggestedUsers, props.count);\r\n\r\n    limitedUsers =\r\n      suggestedUsersList &&\r\n      suggestedUsersList.map((suggestedUser, index) => {\r\n        return (\r\n          <SuggestedUser\r\n            key={suggestedUser + index}\r\n            src={suggestedUser.profileImage}\r\n            username={suggestedUser.username}\r\n            userId={suggestedUser._id}\r\n            minWidth={props.minWidth}\r\n          />\r\n        );\r\n      });\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box w=\"100%\" textAlign=\"center\" p=\"12px\">\r\n        <Spinner />\r\n      </Box>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <Box w=\"100%\" textAlign=\"center\" p=\"12px\"></Box>;\r\n  }\r\n  return limitedUsers;\r\n}\r\n\r\nexport default SuggestedUserList;\r\n"],"sourceRoot":""}