{"version":3,"sources":["assets/Search-amico.svg","components/Profile/NoPostsFound.js","components/Profile/ProfilePosts.js","components/Profile/ProfileUserInfo.js","pages/ProfilePage.js"],"names":["NoPostsFound","textAlign","paddingX","paddingY","maxWidth","marginX","src","NoPostsImage","fontSize","ProfilePosts","props","fetchedPosts","length","mt","style","height","className","base","md","lg","xl","map","image","index","justifyItems","borderRadius","d","justifyContent","alignContent","postImage","alt","objectFit","ProfileUserInfo","fetchedData","history","useHistory","dispatch","useDispatch","display","gap","p","w","h","profileImage","boxSize","mx","width","px","py","username","spacing","posts","followers","following","fontWeight","name","bio","owner","size","colorScheme","onClick","push","bg","UISliceActions","setLogoutAlertVisibility","isLogoutAlertVisible","React","memo","ProfilePage","useParams","useState","setFetchedData","isPageLoading","useSelector","state","UISlice","useEffect","setPageLoading","fetchProfileData"],"mappings":"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","file":"static/js/9.c09608a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Search-amico.72117529.svg\";","import React from \"react\";\r\nimport { Box, Image, Text } from \"@chakra-ui/react\";\r\nimport NoPostsImage from \"../../assets/Search-amico.svg\";\r\n\r\nfunction NoPostsFound() {\r\n  return (\r\n    <Box\r\n      textAlign=\"center\"\r\n      paddingX=\"20px\"\r\n      paddingY=\"28px\"\r\n      maxWidth=\"400px\"\r\n      marginX=\"auto\"\r\n    >\r\n      <Image src={NoPostsImage} />\r\n      <Text fontSize=\"xl\" textAlign=\"center\">\r\n        No posts found\r\n      </Text>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NoPostsFound;\r\n","import { Box, Center, Grid, Image, Spinner, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport NoPostsFound from \"./NoPostsFound\";\r\n\r\nfunction ProfilePosts(props) {\r\n  const fetchedPosts = props.fetchedPosts;\r\n\r\n  if (fetchedPosts) {\r\n    if (fetchedPosts.length === 0) {\r\n      return <NoPostsFound />;\r\n    } else {\r\n      const profilePostsContainer = (\r\n        <Box mt=\"28px\">\r\n          <hr style={{ height: \"4px\" }} />\r\n          <Center>\r\n            <Text fontSize=\"2xl\">POSTS</Text>\r\n          </Center>\r\n          <hr />\r\n          <Box\r\n            className=\"ProfilePage__PostsWrapper\"\r\n            paddingX={{ base: \"4px\", md: \"60px\", lg: \"180px\", xl: \"340px\" }}\r\n          >\r\n            {fetchedPosts.map((image, index) => {\r\n              return (\r\n                <Grid\r\n                  className=\"profileImageWrapper\"\r\n                  justifyItems=\"center\"\r\n                  key={index}\r\n                >\r\n                  <Box\r\n                    className=\"postImageContainer\"\r\n                    borderRadius=\"12px\"\r\n                    d=\"flex\"\r\n                    key={index}\r\n                    justifyContent=\"center\"\r\n                    alignContent=\"center\"\r\n                  >\r\n                    <Image\r\n                      src={image.postImage}\r\n                      alt=\"profile-image\"\r\n                      objectFit=\"contain\"\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Box>\r\n        </Box>\r\n      );\r\n\r\n      return profilePostsContainer;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Spinner />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProfilePosts;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  HStack,\r\n  Text,\r\n  Avatar,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UISliceActions } from \"../../store/UISlice\";\r\n\r\nfunction ProfileUserInfo({ fetchedData }) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const editProfileClickHandler = () => {\r\n    history.push(\"/edit-profile\");\r\n  };\r\n\r\n  const logoutButtonClickHandler = () => {\r\n    dispatch(\r\n      UISliceActions.setLogoutAlertVisibility({\r\n        isLogoutAlertVisible: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display={{ base: \"block\", lg: \"flex\" }}\r\n      justifyContent=\"space-between\"\r\n      height=\"40%\"\r\n      gap=\"20px\"\r\n      p=\"24px\"\r\n      paddingX={{ base: \"4px\", xl: \"340px\" }}\r\n    >\r\n      <Box w=\"100%\" h=\"100%\" textAlign=\"center\">\r\n        <Avatar\r\n          src={fetchedData.profileImage}\r\n          boxSize={{ base: \"100px\", md: \"180px\" }}\r\n          mx=\"auto\"\r\n        />\r\n      </Box>\r\n      <Box\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        px=\"20px\"\r\n        py=\"4px\"\r\n        textAlign={{ base: \"center\", lg: \"left\" }}\r\n      >\r\n        <Box className=\"usernameContainer\" fontSize=\"4xl\" mx=\"auto\">\r\n          {fetchedData.username}\r\n        </Box>\r\n        <HStack\r\n          mx=\"auto\"\r\n          spacing=\"40px\"\r\n          paddingY={{ base: \"6px\" }}\r\n          justifyContent={{ base: \"center\", lg: \"left\" }}\r\n        >\r\n          <Text> {fetchedData.posts?.length} posts</Text>\r\n          <Text> {fetchedData.followers?.length} followers </Text>\r\n          <Text> {fetchedData.following?.length} following </Text>\r\n        </HStack>\r\n\r\n        <Box fontWeight=\"600\" mt=\"12px\" className=\"\">\r\n          {fetchedData.name}\r\n        </Box>\r\n        <Box>{fetchedData.bio}</Box>\r\n        {fetchedData.owner === true ? (\r\n          <ButtonGroup spacing=\"8\" mt=\"4\">\r\n            <Button\r\n              size=\"xs\"\r\n              colorScheme=\"cyan\"\r\n              onClick={editProfileClickHandler}\r\n            >\r\n              Edit Profile\r\n            </Button>\r\n            <Button size=\"xs\" bg=\"cyan\" onClick={logoutButtonClickHandler}>\r\n              Logout\r\n            </Button>\r\n          </ButtonGroup>\r\n        ) : null}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default React.memo(ProfileUserInfo);\r\n","import React from \"react\";\r\n\r\nimport \"./ProfilePage.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { fetchProfileData } from \"../store/user-actions\";\r\nimport { UISliceActions } from \"../store/UISlice\";\r\n\r\nimport { useState } from \"react\";\r\nimport ProfilePosts from \"../components/Profile/ProfilePosts\";\r\nimport ProfileUserInfo from \"../components/Profile/ProfileUserInfo\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction ProfilePage() {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const username = params.username;\r\n\r\n  const [fetchedData, setFetchedData] = useState({});\r\n  const isPageLoading = useSelector((state) => state.UISlice.isPageLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(UISliceActions.setPageLoading({ isPageLoading: true }));\r\n\r\n    dispatch(fetchProfileData(setFetchedData, username));\r\n  }, [username]);\r\n\r\n  return !isPageLoading ? (\r\n    <>\r\n      <ProfileUserInfo fetchedData={fetchedData} />\r\n      <ProfilePosts fetchedPosts={fetchedData.posts} />\r\n    </>\r\n  ) : (\r\n    <p>Loading</p>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"sourceRoot":""}